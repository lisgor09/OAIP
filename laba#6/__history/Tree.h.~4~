//---------------------------------------------------------------------------

#ifndef TreeH
#define TreeH

#pragma hdrstop
#pragma argsused

#include <tchar.h>
#include <tchar.h>
#include <conio.h>
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <windows.h>
#include <iostream>
#include <locale.h>
#include <iomanip>
#include <ComCtrls.hpp>
using namespace std;


struct Node
{
	int key, data;
	TTreeNode *index;
	Node *left, *right;
};

class Tree
{
private:
	Node *TreeRoot;
	int size;
public:
	Tree() {TreeRoot = NULL; size = 0;};
	~Tree();
	void Clear(Node*);
	//Node leftRotate(Node*);
	//Node rightRotate(Node *);
	//Node createRightVine(Node *);
	//int getNodeCount(Node *);
	//Node balanceVine(Node *);
	Node *GetRoot();
	void Insert(int,int);
	void Balance();
	void Delete(int);
	void LeftOrder(Node*);
	void PrintIntoTreeView();
	void Print();
	void Clear();
};

Tree tree;
#endif
