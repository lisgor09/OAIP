//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Main.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TFMain *FMain;
//---------------------------------------------------------------------------
__fastcall TFMain::TFMain(TComponent* Owner)
	: TForm(Owner)
{
}
//---------------------------------------------------------------------------
void __fastcall TFMain::Button1Click(TObject *Sender)
{
	tree.Insert(StrToInt(Edit1->Text),0);
}
//---------------------------------------------------------------------------



void __fastcall TFMain::DeleteClick(TObject *Sender)
{
	tree.Delete(StrToInt(Edit2->Text));
}
//---------------------------------------------------------------------------

void __fastcall TFMain::FormCreate(TObject *Sender)
{
	StringGrid->Cells[0][0] = "Ключ";
	StringGrid->Cells[1][0] = "Значение";
	TStringList *KeyList  = new TStringList,
				*DataList = new TStringList;
	DataList -> LoadFromFile("DataList.txt");
	KeyList  -> LoadFromFile("KeyList.txt");
	int i;
	for ( i = 0; i < KeyList->Count; i++)
	{
	   if ( i+1 > StringGrid->RowCount) StringGrid->RowCount++;
	   StringGrid->Cells[0][i+1] = KeyList  ->Strings[i];
	   StringGrid->Cells[1][i+1] = DataList ->Strings[i];
	}
	StringGrid->RowCount+=2;
	delete KeyList;
	delete DataList;
}
//---------------------------------------------------------------------------

void __fastcall TFMain::AddFromSGClick(TObject *Sender)
{
	int i = 1;
	while ( StringGrid->Cells[0][i] != "" )
	{
		tree.Insert( StrToInt(StringGrid->Cells[0][i]),
					 StrToInt(StringGrid->Cells[1][i]) );
		i++;
	}
}
//---------------------------------------------------------------------------

void __fastcall TFMain::TreeViewAdvancedCustomDrawItem(TCustomTreeView *Sender, TTreeNode *Node,
          TCustomDrawState State, TCustomDrawStage Stage, bool &PaintImages,
          bool &DefaultDraw)
{
	Node->Expanded = true;
}
//---------------------------------------------------------------------------

void __fastcall TFMain::ClearTreeClick(TObject *Sender)
{
	TreeView->Items->Clear();
	tree.Clear(tree.GetRoot());
}
//---------------------------------------------------------------------------

void __fastcall TFMain::Button2Click(TObject *Sender)
{
	//TreeView->Select(TreeView->Items->Item[3]);
	//TTreeNode *temp
	//TreeView->Items->Item[5]->MoveTo(TreeView->Items->Item[0],naAddChild);
}
//---------------------------------------------------------------------------

void __fastcall TFMain::FormClose(TObject *Sender, TCloseAction &Action)
{
	TStringList *KeyList  = new TStringList,
				*DataList = new TStringList;
	int i = 1;
	while ( StringGrid->Cells[0][i] != "" )
	{
	   KeyList  ->Add(StringGrid->Cells[0][i]);
	   DataList ->Add(StringGrid->Cells[1][i]);
	   i++;
	}
	DataList -> SaveToFile("DataList.txt");
	KeyList  -> SaveToFile("KeyList.txt");
	delete KeyList;
	delete DataList;
}
//---------------------------------------------------------------------------


void __fastcall TFMain::StringGridGetEditText(TObject *Sender, int ACol, int ARow,
          UnicodeString &Value)
{
	if (ARow+1 == StringGrid->RowCount)
	{
		StringGrid->RowCount++;
	}
}
//---------------------------------------------------------------------------



void __fastcall TFMain::StringGridKeyPress(TObject *Sender, wchar_t &Key)
{
	if ( StringGrid->Cells[0][StringGrid->RowCount-2] == ""
	&&   StringGrid->Cells[1][StringGrid->RowCount-2] == ""
	&&   Key == VK_RETURN )
	{
		StringGrid->RowCount--;
	}
}
//---------------------------------------------------------------------------


void __fastcall TFMain::StringGridSelectCell(TObject *Sender, int ACol, int ARow,
          bool &CanSelect)
{
	if ( StringGrid->Cells[0][StringGrid->RowCount-2] == ""
	&&   StringGrid->Cells[1][StringGrid->RowCount-2] == "")
	{
		StringGrid->RowCount--;
	}
}
//---------------------------------------------------------------------------

void __fastcall TFMain::StringGridExit(TObject *Sender)
{
	if ( StringGrid->Cells[0][StringGrid->RowCount-2] == ""
	&&   StringGrid->Cells[1][StringGrid->RowCount-2] == "")
	{
		StringGrid->RowCount--;
	}
}
//---------------------------------------------------------------------------

